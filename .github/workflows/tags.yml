# This is a basic workflow to help you get started with Actions

name: Tagged Build

on:
  push:
    tags: [ v* ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Notify Slack (started)
        if: success()
        id: slack # IMPORTANT: reference this step ID value in future Slack steps
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: builds
          status: STARTING
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12.16.1'
          registry-url: 'https://registry.npmjs.org'
      - id: packageVersion
        uses: notiz-dev/github-action-json-property@release
        with:
          path: package.json
          prop_path: version
      - id: packageName
        uses: notiz-dev/github-action-json-property@release
        with:
          path: package.json
          prop_path: name
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 375633680607.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: 375633680607.dkr.ecr.us-east-1.amazonaws.com/${{steps.packageName.outputs.prop}}:v${{steps.packageVersion.outputs.prop}}
          build-args: NPM_TOKEN=${{ secrets.NPM_TOKEN }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Notify Slack (success)
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
#          message_id: ${{ steps.slack.outputs.message_id }}
          channel: builds
          status: SUCCESS
          color: good
      - name: Notify Slack (failure)
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
#          message_id: ${{ steps.slack.outputs.message_id }}
          channel: builds
          status: FAILED
          color: danger
